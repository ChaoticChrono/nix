# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = ["nvidia" "i915" "nvidia_modeset" "nvidia_drm" ];
  boot.kernelModules = [ "kvm-intel" "acpi_call" ];
  boot.extraModulePackages = with config.boot.kernelPackages; [
    acpi_call
  ];
  boot.initrd.luks = {
  devices = {
    swap = {
      device = "/dev/disk/by-uuid/191ea1c6-ba1b-4a6a-9f8a-070dfe47bcfb";
      name = "swap";
    };
    root = {
      device = "/dev/disk/by-uuid/7efa4c6a-175a-4df9-9a6f-ae42cdc6356a"; # LUKS root partition UUID
      name = "root";
     };
    };
   };
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/169f1b9d-548a-4c6d-8e2e-a2c15d234633";
      fsType = "xfs";
    };
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5D7E-A004";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
  swapDevices =
    [ { device = "/dev/disk/by-uuid/3a16e641-6555-4c1a-bbbb-6f7b6098cde6"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  #networking.interfaces.enp12s0.useDHCP = lib.mkDefault true;
  #networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
